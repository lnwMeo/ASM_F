import { Doughnut } from "react-chartjs-2";
import { useEffect, useState } from "react";
import { getServiceSummary } from "../../api/Servicework";

const ChartNetwork = () => {
  const [month, setMonth] = useState("");
  const [year, setYear] = useState("");
  const [data, setData] = useState([]);

  const fetchData = async (month, year) => {
    try {
      const response = await getServiceSummary(month, year);
      console.log("data", response.data); // เพิ่ม log เพื่อตรวจสอบข้อมูลที่ดึงมา
      const sortedData = response.data.sort((a, b) => b.count - a.count);
      setData(sortedData);
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  };

  const groupedData = data.reduce((acc, item) => {
    const group = acc.find((g) => g.groupworkId === item.groupworkId);
    if (group) {
      group.data.push(item);
      group.chartData.labels.push(item.affiliationname);
      group.chartData.datasets[0].data.push(item.totalAmount);
      group.additionalInfo.push(
        `(${item.count} ครั้ง) (รวม ${item.totalAmount.toLocaleString()} บาท)`
      );
      group.totalCount += item.count;
      group.totalAmount += item.totalAmount;
      group.confirmedCount += item.statusconfirm ? item.count : 0;
      console.log(group.confirmedCount);
    } else {
      acc.push({
        groupworkId: item.groupworkId,
        groupname: item.groupname,
        data: [item],
        chartData: {
          labels: [item.affiliationname],
          datasets: [
            {
              data: [item.totalAmount],
              backgroundColor: ["#FF6384", "#36A2EB", "#FFCE56", "#4BC0C0"],
            },
          ],
        },
        additionalInfo: [
          `(${
            item.count
          } ครั้ง) (รวม ${item.totalAmount.toLocaleString()} บาท)`,
        ],
        totalCount: item.count,
        totalAmount: item.totalAmount,
        confirmedCount: item.statusconfirm ? item.count : 0,
      });
    }
    return acc;
  }, []);
  console.log("Grouped Data:", groupedData); // เพิ่ม log เพื่อตรวจสอบข้อมูลที่จัดกลุ่ม
  const options = {
    responsive: true,
    maintainAspectRatio: false,
    layout: {
      padding: {
        top: 100,
        bottom: 100,
        left: 100,
        right: 100,
      },
    },
    plugins: {
      legend: {
        display: false, // ซ่อน legend ด้านบน
      },
    },
    cutout: "70%",
  };

  useEffect(() => {
    fetchData(month, year);
  }, [month, year]);
  const currentYear = new Date().getFullYear();
  const years = Array.from({ length: 5 }, (_, i) => currentYear + i);

  return (
    <>
      <div className="flex justify-center  gap-2 bg-white  my-2 p-1">
        <div>
          <label>ปี: </label>
          <select
            onChange={(e) => {
              setYear(e.target.value);
              fetchData(e.target.value, month);
            }}
            className="border rounded-sm px-2 py-1"
          >
            <option value="">เลือกปี</option>
            {years.map((year) => (
              <option key={year} value={year}>
                {year}
              </option>
            ))}
          </select>
        </div>
        <div>
          <label>เดือน: </label>
          <select
            onChange={(e) => {
              setMonth(e.target.value);
              fetchData(year, e.target.value);
            }}
            className="border rounded-sm px-2 py-1"
          >
            <option value="">เลือกเดือน</option>
            {[...Array(12)].map((_, i) => (
              <option key={i} value={i + 1}>
                {i + 1}
              </option>
            ))}
          </select>
        </div>
      </div>

      <div className="flex flex-col xl:flex-row gap-2">
        {groupedData.length > 0 ? (
          groupedData.map((group) => (
            <div
              key={group.groupworkId}
              className="w-full xl:w-2/4 shadow-md rounded-sm p-1 bg-white flex flex-col"
            >
              {/* Header */}
              <div className="bg-indigo-800 rounded-sm flex justify-center p-2">
                <p className="text-gray-100">กลุ่มงาน {group.groupname}</p>
              </div>

              {/* Doughnut Chart */}
              <div className="w-full h-96">
                <Doughnut data={group.chartData} options={options} />
              </div>

              {/* Table */}
              <table className="w-full text-sm text-left rtl:text-right text-gray-500">
                <thead className="text-center text-xs text-gray-900 uppercase bg-indigo-200">
                  <tr>
                    <th scope="col" className="px-6 py-1">
                      หน่วยงานที่รับบริการ
                    </th>
                    <th scope="col" className="px-6 py-1">
                      จำนวนครั้ง
                    </th>
                    <th scope="col" className="px-6 py-1">
                      งบประมาณรวม (หน่วยงาน)
                    </th>
                  </tr>
                </thead>
                <tbody className="text-gray-900 text-center text-xs">
                  {group.data.map((item, index) => (
                    <tr
                      key={`${item.affiliationname}-${index}`}
                      className="bg-white border-b"
                    >
                      <td className="px-6 py-1">{item.affiliationname}</td>
                      <td className="px-6 py-1">{item.count}</td>
                      <td className="px-6 py-1">
                        {item.totalAmount.toLocaleString()} บาท
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>

              {/* Summary */}
              <div className="p-2 text-sm mt-auto">
                <div className="flex justify-between">
                  <p className="text-gray-700">งบประมาณรวมการให้บริการ</p>
                  <p className="text-yellow-700 font-semibold">
                    {group.totalAmount.toLocaleString()}
                  </p>
                </div>
                <div className="flex justify-between">
                  <p className="text-gray-700">จำนวนงานทั้งหมด</p>
                  <p className="text-green-700 font-semibold">
                    {group.totalCount}
                  </p>
                </div>
                <div className="flex justify-between">
                  <p className="text-gray-700">งานที่ยืนยันแล้ว</p>
                  <p className="text-indigo-700 font-semibold">
                    {group.confirmedCount}
                  </p>
                </div>
              </div>
            </div>
          ))
        ) : (
          // Message when no data
          <div className="w-full text-center text-gray-500 text-sm p-4 bg-white shadow-md rounded-sm">
            ไม่มีข้อมูล
          </div>
        )}
      </div>
    </>
  );
};
export default ChartNetwork;
