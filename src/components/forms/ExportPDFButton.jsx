import { useState, useEffect } from "react";
import {
  PDFDownloadLink,
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Font,
  Image,
} from "@react-pdf/renderer";
import { FaFilePdf } from "react-icons/fa";
import PropTypes from "prop-types";
import wt from "../../assets/images/LOGO.png";
import logopdf from "../../assets/images/logopdf.png";
// ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢
Font.register({
  family: "Noto Sans Thai",
  src: "/fonts/NotoSansThai-VariableFont_wdth,wght.ttf",
});

// ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• PDF
const styles = StyleSheet.create({
  page: {
    fontFamily: "Noto Sans Thai",
    padding: 30,
    fontSize: "10px",
    lineHeight: 2.1,
    position: "relative",
  },
  watermarkContainer: {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    justifyContent: "center",
    alignItems: "center",
    opacity: 0.1,
  },
  watermark: {
    maxWidth: "60%", // ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡πÄ‡∏ä‡πà‡∏ô 80% ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤
    maxHeight: "60%",
  },
  imageds: {
    width: "100%", // ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    maxWidth: "40%", // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
    height: "auto", // ‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡πà‡∏ß‡∏ô
  },
  logopd: {
    maxWidth: "35%", // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
    height: "auto", // ‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡πà‡∏ß‡∏ô
  },
  section: {
    marginBottom: 10,
  },
  boldText: {
    fontWeight: "bold",
    fontSize: "12px",
  },
  tableRow: {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  tableColumn: {
    justifyContent: "space-between",
  },
  sectionhandder: {
    display: "flex",
    flexDirection: "row", // ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
    justifyContent: "space-between", // ‡πÄ‡∏ß‡πâ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö
    alignItems: "center", // ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
    marginBottom: 10,
  },
});

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡πÄ‡∏õ‡πá‡∏ô Base64
const convertImageToBase64 = async (url) => {
  try {
    console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å Proxy:", url);

    if (!url) {
      console.error("‚ùå URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô `null` ‡∏´‡∏£‡∏∑‡∏≠ `undefined`");
      return null;
    }

    const proxyUrl = `https://niaassessmentb.nrru.ac.th/proxy-image?url=${encodeURIComponent(
      url
    )}`;
    // console.log("üõ∞ Proxy URL ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:", proxyUrl);

    const response = await fetch(proxyUrl, { cache: "no-cache" });
    if (!response.ok)
      throw new Error(`‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${response.status}`);

    const blob = await response.blob();
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onloadend = () => {
        console.log("‚úÖ ‡πÅ‡∏õ‡∏•‡∏á Base64 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", reader.result.substring(0, 50)); // Log Base64
        resolve(reader.result);
      };
      reader.onerror = reject;
      reader.readAsDataURL(blob); // ‚úÖ ‡πÉ‡∏ä‡πâ Base64
    });
  } catch (error) {
    console.error("‚ùå Error converting image:", error);
    return null;
  }
};

// ‚úÖ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ PDF
const PDFContent = ({ data, imageBase64 }) => {
  if (!data) {
    return (
      <Document>
        <Page size="A4" style={styles.page}>
          <View style={styles.section}>
            <Text style={styles.boldText}>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</Text>
          </View>
        </Page>
      </Document>
    );
  }

  return (
    <Document>
      <Page size="A4" style={styles.page}>
        {/* ‡∏•‡∏≤‡∏¢‡∏ô‡πâ‡∏≥ */}
        <View style={styles.watermarkContainer}>
          <Image src={wt} style={styles.watermark} />
        </View>

        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
        <View key={data.id} style={styles.section}>
          <View style={styles.sectionhandder}>
            <Image src={logopdf} style={styles.logopd} />
            <View>
              <Text style={styles.boldText}>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</Text>
              <Text style={styles.boldText}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà : {data.serviceDate} </Text>
            </View>
          </View>

          <View style={styles.section}>
            <Text style={styles.boldText}>‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</Text>
            <Text>‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ : {data.statusrecipient?.statusrecipientname || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"} </Text>
            <Text>‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ : {data.servicerecipient || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"} </Text>
            <Text>‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î : {data.affiliation?.affiliationname || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"} </Text>
          </View>

          {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ */}
          <View style={styles.section}>
            <Text style={styles.boldText}>‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</Text>
            <Text>‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô : {data.groupwork?.GroupWorkname || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"} </Text>
            <View>
              <Text>
                ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà : {data.ServiceWorkEmployee?.map(
                  (employee) => employee.employee?.Employeename
                ).join(" , ") || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}
              </Text>
            </View>
            <Text>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô : {data.worktype?.WorkTypename || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"} </Text>
          </View>

          {/* ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì */}
          <View style={styles.section}>
            <Text style={styles.boldText}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</Text>
            {data.servicebudget?.length ? (
              data.servicebudget.map((budget) => (
                <View key={budget.id} style={styles.tableRow}>
                  <Text style={styles.tableColumn}>{budget.ServiceBudgetname}</Text>
                  <Text style={styles.tableColumn}>{budget.Amount} ‡∏ö‡∏≤‡∏ó</Text>
                </View>
              ))
            ) : (
              <Text>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</Text>
            )}
            <Text style={[styles.boldText, { textAlign: "right" }]}>
              ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° : {data.totalAmount || 0} ‡∏ö‡∏≤‡∏ó
            </Text>
          </View>

          {/* ‡∏£‡∏π‡∏õ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö */}
          <Text style={styles.boldText}>‡∏£‡∏π‡∏õ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö</Text>
          <View style={[styles.section, { alignItems: "center" }]}>
            {imageBase64 ? (
              <Image src={imageBase64} style={styles.imageds} />
            ) : (
              <Text>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ</Text>
            )}
          </View>

          {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
          <View style={styles.section}>
            <Text style={styles.boldText}>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô (‡∏û‡∏≠‡∏™‡∏±‡∏á‡πÄ‡∏Ç‡∏õ)</Text>
            <Text>{data.description || "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏"} </Text>
          </View>

          {/* ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à */}
          <View style={styles.section}>
            <Text style={styles.boldText}>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à</Text>
            {data.servicerating?.length ? (
              data.servicerating.map((rating) => (
                <View key={rating.id} style={styles.tableRow}>
                  <Text style={styles.tableColumn}>{rating.questionrating?.questionname}</Text>
                  <Text style={styles.tableColumn}>{rating.score} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</Text>
                </View>
              ))
            ) : (
              <Text>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</Text>
            )}
          </View>

          {/* ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô */}
          <View style={[styles.section, { textAlign: "right", marginTop: 8 }]}>
            {data.statusconfirm && (
              <View>
                <Text>‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á : {data.confirmbyname?.name || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"} </Text>
                <Text>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á : {data.confirmbyname?.rank || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"} </Text>
              </View>
            )}
          </View>
        </View>
      </Page>
    </Document>
  );
};


// ‚úÖ ‡∏õ‡∏∏‡πà‡∏° Export PDF
const ExportPDFButton = ({ data, imageUrl }) => {
  const [imageBase64, setImageBase64] = useState(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    if (!imageUrl) {
      // console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û");
      setIsLoading(false);
      return;
    }

    console.log("üì∑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å URL:", imageUrl);

    convertImageToBase64(imageUrl).then((base64) => {
      if (base64) {
        console.log("‚úÖ Base64 ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", base64.substring(0, 50));
        setImageBase64(base64);
      } else {
        console.error("‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á Base64 ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      }
      setIsLoading(false);
    });
  }, [imageUrl]);

  if (isLoading) return <p>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î PDF...</p>;

  return (
    <PDFDownloadLink
      className="p-2 bg-indigo-800 text-white rounded-sm text-sm hover:bg-indigo-900 inline-flex gap-2 items-center"
      document={<PDFContent data={data} imageBase64={imageBase64} />}
      fileName="service-details.pdf"
    >
      <FaFilePdf /> Export to PDF
    </PDFDownloadLink>
  );
};

ExportPDFButton.propTypes = {
  data: PropTypes.shape({
    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    serviceDate: PropTypes.string.isRequired,
  }).isRequired,
  imageUrl: PropTypes.string, // ‚úÖ ‡πÅ‡∏¢‡∏Å `imageUrl` ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤
};

PDFContent.propTypes = {
  data: PropTypes.shape({
    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    serviceDate: PropTypes.string.isRequired,
    imageUrl: PropTypes.string,
  }).isRequired,
};

ExportPDFButton.propTypes = {
  data: PropTypes.shape({
    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    imageUrl: PropTypes.string,
  }).isRequired,
};

export default ExportPDFButton;
